
<%- include('./common/header.ejs') %>
<%- include('./common/nav.ejs') %>
<div class="wrapper">
    <div class="title">Your current bookings</div>
    <% if (bookings.length === 0) { %>
        <div class="center">
            <h3>You do not have any bookings</h3>
            
        </div>
        <div class="center">
            <a class="cta" href="/bookings">Book now!</a>
        </div>
    <% } else { %>
        <table class="table-layout">
            <tr>
                <th>Booking Date</th>
                <th>Booking Status</th>
                <th>Action</th>
            </tr>
            <% for( let i = 0; i < bookings.length; i++ ) { %>
                <tr>
                    <td><%= new Date(bookings[i].bookingDateTime).toLocaleString()%></td>
                    <td><%= bookings[i].status %></td>
                    <% if (bookings[i].status === 'pending') {%>
                        <td>
                            <a class="btn cancel">
                                <i class="fas fa-ban" booking-id="<%= bookings[i]._id%>" ></i>
                            </a>
                            <a class="btn edit">
                                <i class="fas fa-edit" booking-id="<%= bookings[i]._id%>"></i>
                            </a>
                        </td>
                    <% } else if (bookings[i].status === 'cancelled' || bookings[i].status === 'expired') { %>
                        <td>
                            <a class="btn delete">
                                <i class="fas fa-trash" booking-id="<%= bookings[i]._id%>"></i>
                            </a>
                        </td>
                    <% } %>
                    
                </tr>
            <% } %>
        </table>
    <% } %>
</div>
<script>
    class Client {
        constructor(node, strategy) {
            this.ele = [...node];
            this.init();
            this.strategy = strategy;
        }

        init() {
            this.ele.forEach((element) => {
                element.addEventListener('click', (e) => {
                    this.handleClick(e.target);
                })
            })
        }

        handleClick(ele) {
            this.strategy.process(ele);
        }
    }

    class ButtonStrategy {
        process(element) {
            const id = element.getAttribute('booking-id');
            if (element.classList.contains('fa-edit')) return this.edit(id);
            if (element.classList.contains('fa-trash')) return this.delete(id);
            if (element.classList.contains('fa-ban')) return this.cancel(id);
        }
        
        edit(id) {
            const endpoint = `bookings/${id}`;
            window.location.href = endpoint;
        }

        cancel(id) {
            const endpoint = `bookings/${id}/cancel`;
            fetch(endpoint,{ method: 'PUT' })
            .then((response)=> response.json())
            .then((data)=> {window.location.href = data.redirect})
            .catch(console.log)
        }

        delete(id) {
            const endpoint = `bookings/${id}`;
            fetch(endpoint,{ method: 'DELETE' })
            .then((response)=> response.json())
            .then((data)=> {window.location.href = data.redirect})
            .catch(console.log)
        }
    }

    new Client(document.querySelectorAll('.btn'), new ButtonStrategy());
</script>
<%- include('./common/footer.ejs') %>